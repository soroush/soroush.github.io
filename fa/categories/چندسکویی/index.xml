<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>چندسکویی on اختاپوس خسته</title>
    <link>https://soroush.github.io/fa/categories/%DA%86%D9%86%D8%AF%D8%B3%DA%A9%D9%88%DB%8C%DB%8C/</link>
    <description>Recent content in چندسکویی on اختاپوس خسته</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 11 Sep 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://soroush.github.io/fa/categories/%DA%86%D9%86%D8%AF%D8%B3%DA%A9%D9%88%DB%8C%DB%8C/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>برنامه‌نویسی شبکه در ویندوز/لینوکس: libcpnet</title>
      <link>https://soroush.github.io/fa/1396/06/20/libcpnet/</link>
      <pubDate>Mon, 11 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://soroush.github.io/fa/1396/06/20/libcpnet/</guid>
      <description>&lt;p&gt;کارفرمای کاری که الان دارم انجام میدم اصرار داره که برنامه‌ش علاوه‌بر لینوکس روی
ویندوز هم به‌خوبی اجرا بشه. مدیر من کاملاً این محدودیت رو پذیرفته و به کارفرما
گفته که با سخت‌افزاری که مشخصاتش رو اعلام می‌کنیم و با مشخصات کارکردی که اعلام
می‌کنیم، روی ویندوز هم می‌تونید برنامه رو اجرا کنید. خوب این تصمیم مشکلات بسیار
بزرگی برای برنامه‌نویس به‌وجود میاره. ازجمله برنامه‌نویسی شبکه&amp;hellip; این پست به
بررسی این مشکلات و ارائهٔ یک راه حل خوب خواهد پرداخت (: اگر قصد دارید کدی
بنویسید که هم روی ویندوز و هم روی سیستم‌عامل‌های واقعی بتونه از شبکه استفاده
کنه
حتماً ادامهٔ مطلب رو بخونید.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ارتباط میان‌زبانی</title>
      <link>https://soroush.github.io/fa/1393/07/26/ultimate-software-porting-guide/</link>
      <pubDate>Sat, 18 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>https://soroush.github.io/fa/1393/07/26/ultimate-software-porting-guide/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;زبان مورد استفاده برای پیاده‌سازی یک ابزار، یکی از ویژگی‌های آن نیست.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;دنیا پر از ابزارها و کتابخانه‌هایی هست که به‌دست برنامه‌نویسان مختلفی
به‌زبان‌های مختلف نوشته شدن. بدون وجود این کتابخانه‌ها و ابزارها زندگی برای ما
برنامه‌نویس‌ها (به‌دلایلی واضح) خیلی سخت می‌شد.&lt;/p&gt;
&lt;p&gt;به عقیدهٔ من همه‌چیز باید همه‌جا برای همه‌کس قابل استفاده باشه. یعنی این که
مثلاً این که من فلان کتابخانهٔ کاربردی و باحال رو با زبان ‪C++‬ پیاده‌سازی کردم
نباید باعث بشه که یک برنامه‌نویس پایتون یا جاوا نتونه ازش استفاده کنه. حتا
زبان‌هایی که دامنه و کاربرد مختلفی دارن باید پشتیبانی بشن. مثلاً یکی از
ابزارهایی که ساختم در اصل به‌عنوان یک «حل‌کنندهٔ مسأله» برای کاربردهای پیشرفتهٔ
هوش مصنوعی طراحی شده، و این‌چنین موضوعاتی معمولاً  برای کاربردهای سیستمی و
خاص‌منظوره استفاده میشن. اما هیچ دلیلی وجود نداره که یک برنامه‌نویس وب برای یک
اپلیکیشن آنلاین نخواد از مدل‌سازی ارضای محدودیت برای حل یک سری مسائل داخل
برنامه‌ش استفاده کنه، یا یک برنامه‌نویس اندرویید نخواد از سیستم‌های استنتاج فازی
برای برنامه‌ش استفاده کنه. بنابراین وظیفهٔ منِ برنامه‌نویس است، که برای تمام
زبان‌هایی که می‌تونم، &lt;strong&gt;رابط&lt;/strong&gt; (=&amp;gt;interface)های &lt;strong&gt;بومی&lt;/strong&gt; (=&amp;gt;native) فراهم کنم تا همه
بتونن از ابزارم استفاده کنن.&lt;/p&gt;
&lt;p&gt;توی این پست نحوهٔ ایجاد رابط برای زبان‌های مختلف رو توضیح میدم. طبق این روش
ساده، میشه به‌راحتی برای کتابخانه‌های ‪C++‬ رابط‌هایی برای تمام زبان‌های دیگه
پیاده‌سازی کرد.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>توسعهٔ چندسکویی</title>
      <link>https://soroush.github.io/fa/1393/06/27/cross-platform-development/</link>
      <pubDate>Thu, 18 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://soroush.github.io/fa/1393/06/27/cross-platform-development/</guid>
      <description>&lt;p&gt;دوست دارم برنامه‌ها و کتابخونه‌هام روی پلتفرم‌های مختلف اجرا بشن. هرچه بیشتر
بهتر! البته همیشه هدف اصلی همیشه
&lt;a href=&#34;http://en.wikipedia.org/wiki/Linux&#34;&gt;لینوکس&lt;/a&gt;
و &lt;a href=&#34;http://en.wikipedia.org/wiki/Unix-like&#34;&gt;سیستم‌های شبه‌یونیکس&lt;/a&gt; هستند. با این
حال بدم نمیاد که عملکرد مشابهی رو برای ویندوز و اندرویید، شاید هم مک‌اواس فراهم
کنم. در واقع &lt;strong&gt;پلتفرم&lt;/strong&gt; نباید یک محدودیت برای استفاده از نرم‌افزار باشه. مجموع
این‌ها ما رو به ایدهٔ
&lt;a href=&#34;http://en.wikipedia.org/wiki/Cross-platform&#34;&gt;توسعهٔ چندسکویی&lt;/a&gt;
می‌رسونه. متأسفانه این کار چندان ساده هم نیست. استاندارد پذیرفته‌شده‌ای برای
APIهای
سیستم‌عامل‌ها وجود نداره. همچنین هیچ الگوی کلی‌ای برای عملیات سیستم‌عامل
موجود نیست. توسعه‌دهنده‌ها باید با درنظر داشتن تمام نیازمندی‌های چندسکویی کد
بنویسند.&lt;/p&gt;
&lt;p&gt;توی این پست، تجربهٔ شخصی خودم رو در مورد توسعهٔ چندسکویی پروژهٔ AIT می‌نویسم.
توی اون پروژه به مشکلات زیادی برخوردم و تعدادی‌شون رو حل کردم. این نوشته یک
چک‌لیست ساده برای کسایی که می‌خوان توسعهٔ چندسکویی انجام بدن فراهم می‌کنه که
بتونن از مشکلات توسعهٔ چندسکویی با زبان‌های ‏‪C/C++‬ پیشگیری کنن. رفتیم که بریم :)&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>