<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#43;&#43; on اختاپوس خسته</title>
    <link>https://soroush.github.io/fa/categories/c&#43;&#43;/</link>
    <description>Recent content in C&#43;&#43; on اختاپوس خسته</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 02 Aug 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://soroush.github.io/fa/categories/c++/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>تقویم هجری خورشیدی در کیوت</title>
      <link>https://soroush.github.io/fa/1399/05/12/persian-calendar-in-qt/</link>
      <pubDate>Sun, 02 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://soroush.github.io/fa/1399/05/12/persian-calendar-in-qt/</guid>
      <description>&lt;p&gt;برای ما ایرانی‌ها استفاده از تقویم فارسی در محیط کامپیوتری همیشه چالش‌برانگیز
بوده. به‌طور سیستم‌های رایانه‌ای با درنظر داشتن امکان تغییر تقویم‌ها طراحی و
توسعه پیدا نمی‌کنند و ما همیشه مجبوریم جای خالی تقویم رسمی کشور - هجری خورشیدی -
رو با هک و روش‌های غیرمتعارف پر کنیم.&lt;/p&gt;
&lt;p&gt;برای من همیشه نبود تقویم هجری شمسی در کیوت آزاردهنده بوده. وقتی
می‌خواستم تاریخ رو داخل برنامه‌های ‪C++‬ نشون بدم؛ یا باید از ویجت‌هایی که خودم
ساختم استفاده می‌کردم یا به تاریخ گرگورین (میلادی) بسنده می‌کردم. از نسخهٔ ۴٫۶ و
دقیقاً بعد از زمانی که ترجمهٔ فارسی کیوت رو منتشر کردم، به فکر پیاده‌سازی تقویم
رسمی کشور توی این فریم‌ورک بودم. متأسفانه اون روزها امکان پیاده‌سازی به دلایل
محتلف وجود نداشت. با این حال اولین نمونه‌ها رو ساختم ولی به کیوت ۵ نرسید. کیوت ۵
داستان غم‌انگیز خودش رو داشت و با انتشار نسخهٔ نارس ۵٬۰٬۰ ؛ فرصتی که با تغییر
نسخه از چهار به پنج به وجود آمده بود هم از دست رفت. اما بالأخره بعد از گذشت ۶
سال و فراموش شدن موضوع تونستم تقویم هجری خورشیدی رو برای کیوت ۵٫۱۰ پیاده‌سازی
کنم. نسخهٔ نهایی همراه با کیوت ۵٫۱۴ در تاریخ ۲۱ آذر سال ۱۳۹۸ منتشر شد. این پست
به چالش‌ها و روال توسعهٔ تقویم و نحوهٔ استفاده از API اختصاص داده شده.
&lt;figure&gt;
    &lt;img src=&#34;https://soroush.github.io/fa/fa/static/images/jalali.gif&#34;/&gt; &lt;figcaption&gt;
            &lt;h4&gt;نمونهٔ اجرا&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>محاسبهٔ ثابت‌های ریاضی</title>
      <link>https://soroush.github.io/fa/1397/01/29/math-constants-in-cpp/</link>
      <pubDate>Fri, 13 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://soroush.github.io/fa/1397/01/29/math-constants-in-cpp/</guid>
      <description>هیچ‌کدام از استانداردهای سی‌پلاس‌پلاس و یا سی عدد π را تعریف نکرده‌اند. بنابراین هر برنامه‌نویسی که قصد داشته باشه از توابع مثلثاتی یا آماری استفاده کنه مجبوره خودش π رو تعریف کنه. خوشبختانه فایل‌های سرآیند استاندارد عدد π رو تعریف کرده‌اند، (ثابت M_PI در هدر math.h رو ببینید) با این وجود استفاده از این ثابت و ثابت‌های دیگه بسیار خطرناک هست و برای کاربردهای دقیق باعث بروز خطاهای عددی خواهد شد.</description>
    </item>
    
    <item>
      <title>مشکل نیم‌فاصله در KDE و روش حل آن</title>
      <link>https://soroush.github.io/fa/1396/09/27/kates-zwnj-bug/</link>
      <pubDate>Mon, 18 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://soroush.github.io/fa/1396/09/27/kates-zwnj-bug/</guid>
      <description>&lt;p&gt;قبلاً در مورد
&lt;a href=&#34;https://soroush.github.io/fa/1396/02/19/worst-ever-bug/&#34;&gt;باگ بسیار بدی&lt;/a&gt;
که در کیوت به‌وجود آمده بود و روش حل آن نوشتم. این
باگ باعث میشد امکان نوشتن نویسه‌های کنترلی مثل نیم‌فاصله و تغییر جهت
به‌طور کامل از بین بره. (اگر از نیم‌فاصله استفاده نمی‌کنید و یا نمی‌دونید تغییر
جهت متن چه اهمیتی داره حتماً
&lt;a href=&#34;https://soroush.github.io/fa/1393/06/27/unicode-bidi/&#34;&gt;نویسه‌های کنترلی و جهت‌دهی متون فارسی/انگلیسی&lt;/a&gt;
رو بخونید)&lt;/p&gt;
&lt;p&gt;الآن با گذشت چند ماه باگ مربوطه برطرف شده و با نسخهٔ 5.9.1 منتشر شده.
(تغیرات گریت برای ماژول qtbase
&lt;a href=&#34;https://codereview.qt-project.org/#/c/179219/&#34;&gt;اینجا&lt;/a&gt;
و برای ماژول qtdeclarative
&lt;a href=&#34;https://codereview.qt-project.org/#/c/179258/&#34;&gt;اینجا&lt;/a&gt;
قابل مشاهده هستند)
خوشبختانه برنامه‌های کیوت دیگه مشکل سابق رو ندارند و هم توی ماژول widgets و هم
توی ماژول جدیدتر Qt Quick مشکل به‌طور کامل برطرف شده. خوب حداقل من این‌طور فکر
می‌کردم!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>برنامه‌نویسی شبکه در ویندوز/لینوکس: libcpnet</title>
      <link>https://soroush.github.io/fa/1396/06/20/libcpnet/</link>
      <pubDate>Mon, 11 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://soroush.github.io/fa/1396/06/20/libcpnet/</guid>
      <description>&lt;p&gt;کارفرمای کاری که الان دارم انجام میدم اصرار داره که برنامه‌ش علاوه‌بر لینوکس روی
ویندوز هم به‌خوبی اجرا بشه. مدیر من کاملاً این محدودیت رو پذیرفته و به کارفرما
گفته که با سخت‌افزاری که مشخصاتش رو اعلام می‌کنیم و با مشخصات کارکردی که اعلام
می‌کنیم، روی ویندوز هم می‌تونید برنامه رو اجرا کنید. خوب این تصمیم مشکلات بسیار
بزرگی برای برنامه‌نویس به‌وجود میاره. ازجمله برنامه‌نویسی شبکه&amp;hellip; این پست به
بررسی این مشکلات و ارائهٔ یک راه حل خوب خواهد پرداخت (: اگر قصد دارید کدی
بنویسید که هم روی ویندوز و هم روی سیستم‌عامل‌های واقعی بتونه از شبکه استفاده
کنه
حتماً ادامهٔ مطلب رو بخونید.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>